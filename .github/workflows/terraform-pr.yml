on:
  pull_request:
    branches: [ "main" ]

jobs:
  terraform-pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
      - name: Auth to gcp
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.TSM_TERRAFORM_PROD }}
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: terraform/env/prod
        continue-on-error: true
      - name: terraform init
        id: init
        run: terraform init
        working-directory: terraform/env/prod
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: terraform/env/prod
        continue-on-error: true
      - name: Plan terraform
        id: plan
        run: terraform plan -no-color > tfplan.txt
        working-directory: terraform/env/prod
        env:
          TF_VAR_slackbot_auth_token: ${{ secrets.SLACKBOT_AUTH_TOKEN }}
      - name: Update PR
        uses: actions/github-script@v6
        with:
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
          
